[{"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/index.js":"1","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/App/App.js":"2","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Tile/Tile.js":"3","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/store.js":"4","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/initialState.js":"5","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducers/rootReducer.js":"6","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Settings/Settings.js":"7","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducers/settingsReducer.js":"8","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_HARD.js":"9","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_MEDIUM.js":"10","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_EASY.js":"11","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/START_NEW_GAME.js":"12","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/REMOVE_FLAG.js":"13","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_FLAG.js":"14","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/setDifficulty.js":"15","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/startNewGame.js":"16","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/toggleFlag.js":"17","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Grid/Grid.js":"18","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/OPEN_TILE.js":"19","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/openTile.js":"20","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/WIN_GAME.js":"21","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/endGame.js":"22","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/LOSE_GAME.js":"23"},{"size":354,"mtime":1611427867000,"results":"24","hashOfConfig":"25"},{"size":6837,"mtime":1611525531000,"results":"26","hashOfConfig":"25"},{"size":2876,"mtime":1611530344000,"results":"27","hashOfConfig":"25"},{"size":215,"mtime":1611526915000,"results":"28","hashOfConfig":"25"},{"size":194,"mtime":1611513047000,"results":"29","hashOfConfig":"25"},{"size":295,"mtime":1611272342000,"results":"30","hashOfConfig":"25"},{"size":1566,"mtime":1611528682000,"results":"31","hashOfConfig":"25"},{"size":4572,"mtime":1611528596000,"results":"32","hashOfConfig":"25"},{"size":86,"mtime":1611270135000,"results":"33","hashOfConfig":"25"},{"size":92,"mtime":1611270106000,"results":"34","hashOfConfig":"25"},{"size":86,"mtime":1611270155000,"results":"35","hashOfConfig":"25"},{"size":71,"mtime":1611427218000,"results":"36","hashOfConfig":"25"},{"size":62,"mtime":1611275276000,"results":"37","hashOfConfig":"25"},{"size":53,"mtime":1611275254000,"results":"38","hashOfConfig":"25"},{"size":556,"mtime":1611525461000,"results":"39","hashOfConfig":"25"},{"size":158,"mtime":1611528699000,"results":"40","hashOfConfig":"25"},{"size":374,"mtime":1611275800000,"results":"41","hashOfConfig":"25"},{"size":1587,"mtime":1611526119000,"results":"42","hashOfConfig":"25"},{"size":56,"mtime":1611501271000,"results":"43","hashOfConfig":"25"},{"size":148,"mtime":1611525450000,"results":"44","hashOfConfig":"25"},{"size":53,"mtime":1611527440000,"results":"45","hashOfConfig":"25"},{"size":381,"mtime":1611527949000,"results":"46","hashOfConfig":"25"},{"size":56,"mtime":1611527410000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11pc79d",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/index.js",[],["98","99"],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/App/App.js",["100"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Settings from '../Settings/Settings'\nimport Grid from '../Grid/Grid'\nimport setDifficulty from '../../store/ActionCreators/setDifficulty'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDifficulty: (diff) => dispatch(setDifficulty(diff)),\n  }\n}\n\nconst mapStateToProps = state => {\n  return { state }\n}\n\nfunction App(props) {\n\n  // const initailState = {\n  //   bombs: [],\n  //   numbers: [],\n  //   tiles: [],\n  //   width: 16,\n  //   height: 16,\n  //   difficulty: 'medium',\n  //   bombsCounter: 40,\n  //   flagCounter: 0,\n  //   isGameOver: false,\n  // }\n\n  // const [state, setState] = useState(initailState);\n\n  // const selectDifficulty = difficulty => {\n\n  //   if (difficulty === 'easy') {\n  //     return {\n  //       ...state,\n  //       bombs: [],\n  //       numbers: [],\n  //       tiles: [],\n  //       width: 8,\n  //       height: 8,\n  //       bombsCounter: 10,\n  //       flagCounter: 0,\n  //       message: '',\n  //       isGameOver: false,\n  //       difficulty,\n  //       detonatedId: null,\n  //     }\n  //   }\n  //   if (difficulty === 'medium') {\n  //     return {\n  //       ...state,\n  //       bombs: [],\n  //       numbers: [],\n  //       tiles: [],\n  //       width: 16,\n  //       height: 16,\n  //       bombsCounter: 40,\n  //       flagCounter: 0,\n  //       message: '',\n  //       isGameOver: false,\n  //       difficulty,\n  //       detonatedId: null,\n  //     }\n  //   }\n  //   if (difficulty === 'hard') {\n  //     return {\n  //       ...state,\n  //       bombs: [],\n  //       numbers: [],\n  //       tiles: [],\n  //       width: 30,\n  //       height: 16,\n  //       bombsCounter: 99,\n  //       flagCounter: 0,\n  //       message: '',\n  //       isGameOver: false,\n  //       difficulty,\n  //       detonatedId: null,\n  //     }\n  //   }\n  // }\n\n  // const initGame = difficulty => {\n\n  //   const newState = selectDifficulty(difficulty)\n\n  //   const boardSize = newState.width * newState.height;\n\n  //   for (let i = 0; i < boardSize; i++) {\n  //     newState.tiles.push({\n  //       index: i,\n  //       isBomb: false,\n  //       number: 0,\n  //       isOpen: false,\n  //       isFlag: false,\n  //     })\n  //   }\n  \n  //   let x = 0;\n  //   let y = 0;\n\n  //   const generateBombs = (bombsCounter, maxTiles) => {\n  //     const bombsIndexes = new Set();\n\n  //     do {\n  //       bombsIndexes.add(Math.trunc(Math.random() * maxTiles))\n  //     } while (bombsIndexes.size < bombsCounter)\n  \n  //     bombsIndexes.forEach( index => {\n  //       newState.tiles.find( tile => {\n  //         if (tile.index === index) {\n  //           tile.isBomb = true;\n  //         }\n  //       })\n  //     })\n  //   }\n\n  //   generateBombs(newState.bombsCounter, boardSize)\n    \n  //   newState.tiles.forEach((tile) => {\n  //     tile.coords = `${x},${y}`;\n      \n  //     if (tile.isBomb) {\n  //       newState.bombs.push(`${x},${y}`);\n\n  //       if (x > 0 && y > 0) newState.numbers.push(`${x-1},${y-1}`);\n  //       if (y > 0) newState.numbers.push(`${x},${y-1}`);\n  //       if (y > 0 && x < newState.width - 1) newState.numbers.push(`${x+1},${y-1}`);\n\n  //       if (x > 0) newState.numbers.push(`${x-1},${y}`);\n  //       if (x < newState.width - 1) newState.numbers.push(`${x+1},${y}`);\n\n  //       if (x > 0 && y < newState.height - 1) newState.numbers.push(`${x-1},${y+1}`);\n  //       if (y < newState.height - 1) newState.numbers.push(`${x},${y+1}`);\n  //       if (x < newState.width - 1 && y < newState.height - 1) newState.numbers.push(`${x+1},${y+1}`);\n\n  //     }\n      \n  //     x++;\n  //     if (x >= newState.width) {\n  //       x = 0;\n  //       y++;\n  //     }\n  //   });\n    \n  //   newState.numbers.forEach(num => {\n  //     newState.tiles.find( tile => {\n  //       if (tile.coords === num) {\n  //         tile.number++;\n  //       }\n  //     })\n  //   });\n\n  //   setState(newState);\n  // }\n\n  // const openTile = (index) => {\n  //   const newState = {...state}\n  //   newState.tiles.find( tile => {\n  //     if (index === tile.index && tile.number === 0 && !tile.isBomb) {\n  //       openTilesAround(tile.coords, newState)\n  //     }\n  //     if (index === tile.index) {\n  //       tile.isOpen = true;\n  //     }\n  //   })\n  //   setState(newState);\n  // }\n\n  // const openTilesAround = (coords, state) => {\n\n  //   const emptyTiles = new Set();\n\n  //   const openEightTiles = coords => {\n      \n  //     const [x, y] = coords.split(',')\n    \n  //     const coordsAround = [\n  //       `${+x-1},${+y-1}`,\n  //       `${+x},${+y-1}`,\n  //       `${+x+1},${+y-1}`,\n  //       `${+x-1},${+y}`,\n  //       `${+x+1},${+y}`,\n  //       `${+x-1},${+y+1}`,\n  //       `${+x},${+y+1}`,\n  //       `${+x+1},${+y+1}`,    \n  //     ]\n\n  //     const newState = {...state}\n\n  //     coordsAround.forEach( coord => {\n  //       newState.tiles.find( tile => {\n  //         if (tile.coords === coord && !tile.isFlag) {\n  //           tile.isOpen = true;\n  //           if (tile.number === 0) {\n  //             emptyTiles.add(tile.coords)\n  //           }\n  //         }\n  //       })\n  //     })\n  //   }\n\n  //   openEightTiles(coords);\n\n  //   let initialLength = 0;\n\n  //   while (emptyTiles.size !== initialLength) {\n  //     initialLength = emptyTiles.size;\n  //     emptyTiles.forEach( coord => {\n  //       openEightTiles(coord) \n  //     })\n  //   }\n  // }\n\n  // const setFlag = (index) => {\n  //   const newState = {...state}\n  //   newState.tiles.find( tile => {\n  //     if (index === tile.index) {\n  //       tile.isFlag = !tile.isFlag;\n  //       if (tile.isFlag) {\n  //         newState.flagCounter += 1\n  //       } else {\n  //         newState.flagCounter -= 1\n  //       }\n  //     }\n  //   })\n  //   setState(newState);\n  // }\n\n  // const setGameOver = (bool, message, index) => {\n  //   showBombs();\n  //   setState({\n  //     ...state,\n  //     isGameOver: bool,\n  //     message: message,\n  //     detonatedId: index || null,\n  //   })\n  // }\n\n  // const showBombs = () => {\n  //   const newState = {...state};\n  //   newState.tiles.forEach( tile => {\n  //     if (tile.isBomb) {\n  //       tile.isFlag = false;\n  //       tile.isOpen = true;\n  //     }\n  //   })\n  //   setState(newState)\n  // }\n\n  // const winGame = () => {\n  //   const newState = {...state}\n  //   let openTilesCounter = 0;\n  //   newState.tiles.forEach( tile => {\n  //     if (tile.isOpen && !tile.isBomb) {\n  //       openTilesCounter +=1;\n  //     }\n  //     if (openTilesCounter === (newState.tiles.length - newState.bombsCounter)) {\n  //       setGameOver(true, 'Победа!')\n  //     }\n  //   })\n  // }\n\n  useEffect( () => {\n    props.setDifficulty('easy')\n  }, []);\n\n  return (\n    <div>\n      <Settings />\n      <Grid />\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Tile/Tile.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/store.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/initialState.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducers/rootReducer.js",["101"],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Settings/Settings.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducers/settingsReducer.js",["102"],"import SET_DIFFICULTY_EASY from '../Actions/SET_DIFFICULTY_EASY'\nimport SET_DIFFICULTY_MEDIUM from '../Actions/SET_DIFFICULTY_MEDIUM'\nimport SET_DIFFICULTY_HARD from '../Actions/SET_DIFFICULTY_HARD'\nimport SET_FLAG from '../Actions/SET_FLAG'\nimport REMOVE_FLAG from '../Actions/REMOVE_FLAG'\nimport START_NEW_GAME from '../Actions/START_NEW_GAME'\nimport OPEN_TILE from '../Actions/OPEN_TILE'\nimport WIN_GAME from '../Actions/WIN_GAME'\nimport LOSE_GAME from '../Actions/LOSE_GAME'\n\nconst settingsReducer = (state, action) => {\n\n  const initTiles = (width, height, bombsCounter) => {\n\n    const boardSize = width * height;\n    const tiles = []\n\n    for (let i = 0; i < boardSize; i++) {\n      tiles.push({\n        index: i,\n        isBomb: false,\n        number: 0,\n        isOpen: false,\n        isFlag: false,\n      })\n    }\n\n    const bombsIndexes = new Set();\n\n    do {\n      bombsIndexes.add(Math.trunc(Math.random() * boardSize))\n    } while (bombsIndexes.size < bombsCounter)\n\n    bombsIndexes.forEach( index => {\n      tiles[index].isBomb = true;\n    })\n\n    //editing starts\n\n    const numbers = [];\n\n    let x = 0;\n    let y = 0;\n\n    tiles.forEach((tile) => {\n      tile.coords = `${x},${y}`;\n      \n      if (tile.isBomb) {\n\n        if (x > 0 && y > 0) numbers.push(`${x-1},${y-1}`);\n        if (y > 0) numbers.push(`${x},${y-1}`);\n        if (y > 0 && x < width - 1) numbers.push(`${x+1},${y-1}`);\n\n        if (x > 0) numbers.push(`${x-1},${y}`);\n        if (x < width - 1) numbers.push(`${x+1},${y}`);\n\n        if (x > 0 && y < height - 1) numbers.push(`${x-1},${y+1}`);\n        if (y < height - 1) numbers.push(`${x},${y+1}`);\n        if (x < width - 1 && y < height - 1) numbers.push(`${x+1},${y+1}`);\n\n      }\n      \n      x++;\n      if (x >= width) {\n        x = 0;\n        y++;\n      }\n    });\n    \n    numbers.forEach(num => {\n      tiles.find( tile => {\n        if (tile.coords === num) {\n          tile.number++;\n        }\n      })\n    });\n\n    //editing end\n\n    return tiles;\n  }\n\n  const openSelectedTile = (id) => {\n    const newTiles = [...state.tiles]\n    newTiles[id] = {...state.tiles[id]}\n    newTiles[id].isOpen = true;\n    console.log('is equal? ' + (newTiles[id] === state.tiles[id]))\n    return newTiles\n  }\n\n  const toggleFlagState = (id, flagState) => {\n    const newTiles = [...state.tiles]\n    newTiles[id] = {...state.tiles[id]}\n    newTiles[id].isFlag = flagState\n    return newTiles\n  }\n\n  const showBombs = () => {\n    const newTiles = state.tiles.map( tile => {\n      if (!tile.isBomb) {\n        return tile\n      } else return {\n        ...tile,\n        isFlag: false,\n        isOpen: true,\n      }\n    })\n    return newTiles\n  }\n\n  switch (action.type) {\n    case SET_DIFFICULTY_EASY:\n      return {\n        ...state,\n        width: 8,\n        height: 8,\n        bombsCounter: 10,\n        tiles: initTiles(8, 8, 10),\n        difficulty: 'easy',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_DIFFICULTY_MEDIUM:\n      return {\n        ...state,\n        width: 16,\n        height: 16,\n        bombsCounter: 40,\n        tiles: initTiles(16, 16, 40),\n        difficulty: 'medium',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_DIFFICULTY_HARD:\n      return {\n        ...state,\n        width: 30,\n        height: 16,\n        bombsCounter: 99,\n        tiles: initTiles(30, 16, 99),\n        difficulty: 'hard',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case START_NEW_GAME:\n      return {\n        ...state,\n        tiles: initTiles(state.width, state.height, state.bombsCounter),\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_FLAG:\n      return {\n        ...state,\n        tiles: toggleFlagState(action.id, true),\n        flagCounter: state.flagCounter + 1,\n      };\n    \n    case REMOVE_FLAG:\n      return {\n        ...state,\n        tiles: toggleFlagState(action.id, false),\n        flagCounter: state.flagCounter - 1,\n      };\n\n    case OPEN_TILE:\n      return {\n        ...state,\n        tiles: openSelectedTile(action.id),\n      }\n\n    case LOSE_GAME:\n      return {\n        ...state,\n        tiles: showBombs(),\n        isGameOver: true,\n        message: 'Поражение!',\n        detonatedId: action.detonatedId,\n      }\n\n    case WIN_GAME:\n      return {\n        ...state,\n        isGameOver: true,\n        message: 'Победа!',\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default settingsReducer\n","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_HARD.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_MEDIUM.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_EASY.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/START_NEW_GAME.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/REMOVE_FLAG.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_FLAG.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/setDifficulty.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/startNewGame.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/toggleFlag.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Grid/Grid.js",["103"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Tile from '../Tile/Tile'\nimport classNames from 'classnames'\n\nconst mapStateToProps = state => {\n  return {\n    tiles: state.tiles,\n    isGameOver: state.isGameOver,\n    difficulty: state.difficulty,\n    message: state.message,\n    detonatedId: state.detonatedId,\n  }\n}\n\nconst Grid = (props) => {\n\n  return (\n    <div className={\n      classNames({\n        'app': true,\n        'field': true,\n        'easy': props.difficulty === 'easy',\n        'medium': props.difficulty === 'medium',\n        'hard': props.difficulty === 'hard',\n      })\n    }>\n      {props.tiles.map( tile => {\n        return (<Tile\n          key={tile.index}\n          // id={tile.index}\n          tile={tile}\n          // isGameOver={props.isGameOver}\n          // detonatedId={props.detonatedId}\n          // setGameOver={setGameOver}\n          // winGame={winGame}\n          // openTile={openTile}\n          // setFlag={setFlag}\n        />)}\n      )}\n      {props.isGameOver && \n        <div\n          className={\n            classNames({\n              'messageBox': true,\n              'message__win': (props.message === 'Победа!'),\n              'message__lose': (props.message === 'Поражение!'),\n            })\n          }\n          onClick={ () => {\n            const box = document.querySelector('.messageBox');\n            box.style='display: none';\n          }}\n        >\n          <span>{props.message}</span>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, null)(Grid)\n","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/OPEN_TILE.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/openTile.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/WIN_GAME.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/endGame.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/LOSE_GAME.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":268,"column":6,"nodeType":"110","endLine":268,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":71,"column":24,"nodeType":"118","messageId":"119","endLine":71,"endColumn":26},{"ruleId":"112","severity":1,"message":"120","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["123"],"no-unused-vars","'settingsReducer' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [props]",{"range":"126","text":"127"},[6687,6689],"[props]"]