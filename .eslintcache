[{"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/index.js":"1","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/App/App.js":"2","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Tile/Tile.js":"3","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/store.js":"4","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/initialState.js":"5","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Settings/Settings.js":"6","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Grid/Grid.js":"7","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/setDifficulty.js":"8","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/startNewGame.js":"9","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_EASY.js":"10","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_MEDIUM.js":"11","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_FLAG.js":"12","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_HARD.js":"13","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/START_NEW_GAME.js":"14","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/OPEN_TILE.js":"15","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/WIN_GAME.js":"16","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/LOSE_GAME.js":"17","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/openTile.js":"18","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/toggleFlag.js":"19","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/endGame.js":"20","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducer/rootReducer.js":"21","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_NOTHING.js":"22","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_QUESTION.js":"23"},{"size":354,"mtime":1612303654000,"results":"24","hashOfConfig":"25"},{"size":626,"mtime":1612303654000,"results":"26","hashOfConfig":"25"},{"size":6487,"mtime":1612303654000,"results":"27","hashOfConfig":"25"},{"size":202,"mtime":1611694661000,"results":"28","hashOfConfig":"25"},{"size":194,"mtime":1612303654000,"results":"29","hashOfConfig":"25"},{"size":1578,"mtime":1612303654000,"results":"30","hashOfConfig":"25"},{"size":1321,"mtime":1612303654000,"results":"31","hashOfConfig":"25"},{"size":556,"mtime":1611694661000,"results":"32","hashOfConfig":"25"},{"size":158,"mtime":1611694661000,"results":"33","hashOfConfig":"25"},{"size":86,"mtime":1611694661000,"results":"34","hashOfConfig":"25"},{"size":92,"mtime":1611694661000,"results":"35","hashOfConfig":"25"},{"size":53,"mtime":1611694661000,"results":"36","hashOfConfig":"25"},{"size":86,"mtime":1611694661000,"results":"37","hashOfConfig":"25"},{"size":71,"mtime":1611694661000,"results":"38","hashOfConfig":"25"},{"size":56,"mtime":1611694661000,"results":"39","hashOfConfig":"25"},{"size":53,"mtime":1611694661000,"results":"40","hashOfConfig":"25"},{"size":56,"mtime":1611694661000,"results":"41","hashOfConfig":"25"},{"size":148,"mtime":1611694661000,"results":"42","hashOfConfig":"25"},{"size":523,"mtime":1611694661000,"results":"43","hashOfConfig":"25"},{"size":381,"mtime":1611694661000,"results":"44","hashOfConfig":"25"},{"size":4853,"mtime":1612303654000,"results":"45","hashOfConfig":"25"},{"size":62,"mtime":1611694661000,"results":"46","hashOfConfig":"25"},{"size":65,"mtime":1611694661000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11pc79d",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/index.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/App/App.js",["98"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Settings from '../Settings/Settings'\nimport Grid from '../Grid/Grid'\nimport setDifficulty from '../../store/ActionCreators/setDifficulty'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDifficulty: (diff) => dispatch(setDifficulty(diff)),\n  }\n}\n\nconst mapStateToProps = state => {\n  return { state }\n}\n\nfunction App(props) {\n\n  useEffect( () => {\n    props.setDifficulty('easy')\n  }, []);\n\n  return (\n    <div>\n      <Settings />\n      <Grid />\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n",["99","100"],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Tile/Tile.js",["101"],"import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport flagIcon from '../../images/mine.png'\nimport flagIconDark from '../../images/mine-dark.png'\nimport bombIcon from '../../images/bomb.png'\nimport toggleFlag from '../../store/ActionCreators/toggleFlag'\nimport openTile from '../../store/ActionCreators/openTile'\nimport endGame from '../../store/ActionCreators/endGame'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isGameOver: state.isGameOver,\n    detonatedId: state.detonatedId,\n    bombsCounter: state.bombsCounter,\n    tile: ownProps.tile,\n    tiles: state.tiles,\n    width: state.width,\n    height: state.height,\n    lightTheme: state.lightTheme,\n    isMobileDevice: state.isMobileDevice,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleFlag: (id, currentState) => dispatch(toggleFlag(id, currentState)),\n    openTile: (id) => dispatch(openTile(id)),\n    endGame: (statement, detonatedId = null) => dispatch(endGame(statement, detonatedId)) // statement - 'win'/'lose'\n  }\n}\n\nconst Tile = (props) => {\n\n  useEffect( () => checkWin(props.tiles), [props.tiles])\n\n  let timerStart = 0;\n\n  const initTouchTimer = () => {\n    const timerStart = Date.now()\n    return timerStart\n  }\n\n  const checkTouchTimer = (delay) => {\n    const touchEnd = Date.now()\n    return (touchEnd - timerStart > delay) ? true : false\n  }\n\n  const checkWin = tiles => {\n    let openTilesCounter = 0;\n\n    tiles.forEach( tile => {\n      if (tile.isOpen && !tile.isBomb) {\n        openTilesCounter += 1;\n      }\n    })\n    if (openTilesCounter === (props.tiles.length - props.bombsCounter)) {\n      props.endGame('win')\n    }\n  }\n\n  const getCoordsAround = coords => {\n\n    const x = coords[0]\n    const y = coords[1]\n\n    const coordsAround = []\n\n    if (+x - 1 >= 0 && +y - 1 >= 0) coordsAround.push([+x - 1, +y - 1])\n    if (+y - 1 >= 0) coordsAround.push([+x, +y - 1])\n    if (+x + 1 < props.width && +y - 1 >= 0) coordsAround.push([+x + 1, +y - 1])\n    if (+x - 1 >= 0) coordsAround.push([+x - 1, +y])\n    if (+x + 1 < props.width) coordsAround.push([+x + 1, +y])\n    if (+x - 1 >= 0 && +y + 1 < props.height) coordsAround.push([+x - 1, +y + 1])\n    if (+y + 1 < props.height) coordsAround.push([+x, +y + 1])\n    if (+x + 1 < props.width && +y + 1 < props.height) coordsAround.push([+x + 1, +y + 1])\n\n    return coordsAround\n  }\n\n  const getIndex = (coords) => {\n    return (((coords[1] <= 0) ? 0 : coords[1] * props.width) + coords[0])\n  }\n\n  const openCheckedTiles = (tile, coords) => {\n\n    let flagsCounter = 0\n    \n    const coordsAround = getCoordsAround(coords)\n\n    coordsAround.forEach( coord => {\n      const index = getIndex(coord)\n\n      if (props.tiles[index].overlay === 'flag') {\n        flagsCounter++\n      }\n    })\n\n    if (flagsCounter === tile.number) {\n      openTilesAround(coords)\n    }\n  }\n\n  const openTilesAround = (coords) => {\n\n    const emptyTiles = new Set();\n\n    const openEightTiles = coords => {\n\n      const coordsAround = getCoordsAround(coords)\n\n      coordsAround.forEach( coord => {\n\n        const index = getIndex(coord)\n\n        if (props.tiles[index].overlay !== 'flag' && !props.tiles[index].isOpen) {\n          props.openTile(index)\n        \n          if (props.tiles[index].number === 0){\n            emptyTiles.add(`${coord[0]},${coord[1]}`)\n          }\n          if (props.tiles[index].isBomb) {\n            props.endGame('lose', index)\n          }\n        }\n      })\n    }\n\n    openEightTiles(coords);\n\n    let initialLength = 0;\n\n    while (emptyTiles.size !== initialLength) {\n      initialLength = emptyTiles.size;\n      emptyTiles.forEach( coord => {\n        const coords = coord.split(',')\n        openEightTiles(coords) \n      })\n    }\n  }\n\n  return(\n    <div\n      onClick={ () => {\n        if (props.tile.overlay !== 'flag' && !props.isGameOver && !props.isMobileDevice) {\n          props.openTile(props.tile.index)\n          if (props.tile.number === 0 && !props.tile.isBomb) {\n            openTilesAround(props.tile.coords)\n          }\n        }\n        if (props.tile.overlay !== 'flag' && props.tile.isBomb && !props.isGameOver && !props.isMobileDevice) {\n          props.endGame('lose', props.tile.index) \n        }\n      }}\n      onDoubleClick={ () => {\n        if (props.tile.isOpen) {\n          openCheckedTiles(props.tile, props.tile.coords)\n        }\n      }}\n      onContextMenu={ evt => {\n        evt.preventDefault();\n        if (!props.tile.isOpen && !props.isGameOver && !props.isMobileDevice) {\n          props.toggleFlag(props.tile.index, props.tile.overlay)\n        }\n      }}\n      onTouchStart={ () => {\n        if (props.isMobileDevice) {\n          timerStart = initTouchTimer()\n        }\n      }}\n      onTouchEnd={ () => {\n        const response = checkTouchTimer(500)\n\n        if (response && !props.tile.isOpen && !props.isGameOver) {\n          props.toggleFlag(props.tile.index, props.tile.overlay)\n        }\n\n        if (!response && props.tile.overlay !== 'flag' && !props.isGameOver) {\n          props.openTile(props.tile.index)\n          if (props.tile.number === 0 && !props.tile.isBomb) {\n            openTilesAround(props.tile.coords)\n          }\n        }\n        if (!response && props.tile.overlay !== 'flag' && props.tile.isBomb && !props.isGameOver) {\n          props.endGame('lose', props.tile.index) \n        }\n      }}\n      className='tile'\n    >\n      <div className={\n        classNames({\n          'tile__open': props.tile.isOpen && !props.tile.isBomb,\n          'tile__closed': !props.tile.isOpen || props.tile.overlay !== 'none',\n          'color__one': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 1,\n          'color__two': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 2,\n          'color__three': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 3,\n          'color__four': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 4,\n          'color__five': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 5,\n          'color__six': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 6,\n          'color__seven': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 7,\n          'color__eight': props.tile.overlay === 'none' && !props.tile.isBomb && props.tile.number === 8,\n          'question': props.tile.overlay === 'question',\n          'detonated': (props.detonatedId === props.tile.index)\n        })\n      }>\n        {props.tile.overlay === 'flag' && <img src={(props.lightTheme) ? flagIcon : flagIconDark} alt='F' title='Флаг' className='flagIcon' />}\n        {!props.tile.isOpen && props.tile.overlay === 'question' && '?'}\n        {props.tile.isOpen && !props.tile.isBomb && props.tile.number !== 0 && props.tile.number}\n        {props.tile.isOpen && props.tile.isBomb && <img src={bombIcon} alt='B' title='Мина' className='bombIcon' />}\n      </div>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tile);\n","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/store.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/initialState.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Settings/Settings.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/components/Grid/Grid.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/setDifficulty.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/startNewGame.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_EASY.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_MEDIUM.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_FLAG.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_DIFFICULTY_HARD.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/START_NEW_GAME.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/OPEN_TILE.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/WIN_GAME.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/LOSE_GAME.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/openTile.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/toggleFlag.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/ActionCreators/endGame.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Reducer/rootReducer.js",["102"],"import SET_DIFFICULTY_EASY from '../Actions/SET_DIFFICULTY_EASY'\nimport SET_DIFFICULTY_MEDIUM from '../Actions/SET_DIFFICULTY_MEDIUM'\nimport SET_DIFFICULTY_HARD from '../Actions/SET_DIFFICULTY_HARD'\nimport SET_QUESTION from '../Actions/SET_QUESTION'\nimport SET_FLAG from '../Actions/SET_FLAG'\nimport SET_NOTHING from '../Actions/SET_NOTHING'\nimport START_NEW_GAME from '../Actions/START_NEW_GAME'\nimport OPEN_TILE from '../Actions/OPEN_TILE'\nimport WIN_GAME from '../Actions/WIN_GAME'\nimport LOSE_GAME from '../Actions/LOSE_GAME'\n\nconst settingsReducer = (state, action) => {\n\n  const initTiles = (width, height, bombsCounter) => {\n\n    const boardSize = width * height;\n    const tiles = []\n\n    for (let i = 0; i < boardSize; i++) {\n      tiles.push({\n        index: i,\n        isBomb: false,\n        number: 0,\n        isOpen: false,\n        overlay: 'none',\n      })\n    }\n\n    const bombsIndexes = new Set();\n\n    do {\n      bombsIndexes.add(Math.trunc(Math.random() * boardSize))\n    } while (bombsIndexes.size < bombsCounter)\n\n    bombsIndexes.forEach( index => {\n      tiles[index].isBomb = true;\n    })\n\n    const numbers = [];\n\n    let x = 0;\n    let y = 0;\n\n    tiles.forEach((tile) => {\n      \n      tile.coords = [x, y];\n      \n      if (tile.isBomb) {\n\n        if (x > 0 && y > 0) numbers.push([x - 1, y - 1]);\n        if (y > 0) numbers.push([x, y - 1]);\n        if (y > 0 && x < width - 1) numbers.push([x + 1, y - 1]);\n\n        if (x > 0) numbers.push([x - 1, y]);\n        if (x < width - 1) numbers.push([x + 1, y]);\n\n        if (x > 0 && y < height - 1) numbers.push([x - 1, y + 1]);\n        if (y < height - 1) numbers.push([x, y + 1]);\n        if (x < width - 1 && y < height - 1) numbers.push([x + 1, y + 1]);\n\n      }\n      \n      x++;\n      if (x >= width) {\n        x = 0;\n        y++;\n      }\n    });\n    \n    numbers.forEach(num => {\n      tiles.forEach( tile => {\n        if (tile.coords[0] === num[0] && tile.coords[1] === num[1]) {\n          tile.number++;\n        }\n      })\n    });\n\n    return tiles;\n  }\n\n  const openSelectedTile = (id) => {\n    const newTiles = [...state.tiles]\n    newTiles[id] = {...state.tiles[id]}\n    newTiles[id].isOpen = true\n    newTiles[id].overlay = 'none'\n    return newTiles\n  }\n\n  const toggleFlagState = (id) => {\n    const newTiles = [...state.tiles]\n    newTiles[id] = {...state.tiles[id]}\n    if (newTiles[id].overlay === 'none') {\n      newTiles[id].overlay = 'flag'\n    } else if (newTiles[id].overlay === 'flag') {\n      newTiles[id].overlay = 'question'\n    } else {\n      newTiles[id].overlay = 'none'\n    }\n    \n    return newTiles\n  }\n\n  const showBombs = () => {\n    const newTiles = state.tiles.map( tile => {\n      if (!tile.isBomb) {\n        return tile\n      } else return {\n        ...tile,\n        overlay: 'none',\n        isOpen: true,\n      }\n    })\n    return newTiles\n  }\n\n  switch (action.type) {\n    case SET_DIFFICULTY_EASY:\n      return {\n        ...state,\n        width: 8,\n        height: 8,\n        bombsCounter: 10,\n        tiles: initTiles(8, 8, 10),\n        difficulty: 'easy',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_DIFFICULTY_MEDIUM:\n      return {\n        ...state,\n        width: 16,\n        height: 16,\n        bombsCounter: 40,\n        tiles: initTiles(16, 16, 40),\n        difficulty: 'medium',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_DIFFICULTY_HARD:\n      return {\n        ...state,\n        width: 30,\n        height: 16,\n        bombsCounter: 99,\n        tiles: initTiles(30, 16, 99),\n        difficulty: 'hard',\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case START_NEW_GAME:\n      return {\n        ...state,\n        tiles: initTiles(state.width, state.height, state.bombsCounter),\n        flagCounter: 0,\n        isGameOver: false,\n        detonatedId: null,\n      }\n\n    case SET_FLAG:\n      return {\n        ...state,\n        tiles: toggleFlagState(action.id),\n        flagCounter: state.flagCounter + 1,\n      };\n    \n    case SET_QUESTION:\n      return {\n        ...state,\n        tiles: toggleFlagState(action.id),\n        flagCounter: state.flagCounter - 1,\n      };\n\n    case SET_NOTHING:\n      return {\n        ...state,\n        tiles: toggleFlagState(action.id)\n      };\n\n    case OPEN_TILE:\n      return {\n        ...state,\n        tiles: openSelectedTile(action.id),\n      }\n\n    case LOSE_GAME:\n      return {\n        ...state,\n        tiles: showBombs(),\n        isGameOver: true,\n        message: 'Поражение!',\n        detonatedId: action.detonatedId,\n      }\n\n    case WIN_GAME:\n      return {\n        ...state,\n        isGameOver: true,\n        message: 'Победа!',\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default settingsReducer\n","/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_NOTHING.js",[],"/Users/dmitriyesko/Desktop/Projects/minesweeper/src/store/Actions/SET_QUESTION.js",[],{"ruleId":"103","severity":1,"message":"104","line":37,"column":6,"nodeType":"105","endLine":37,"endColumn":8,"suggestions":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":35,"column":43,"nodeType":"105","endLine":35,"endColumn":56,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":173,"column":5,"nodeType":"115","messageId":"116","endLine":180,"endColumn":8},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"React Hook useEffect has a missing dependency: 'checkWin'. Either include it or remove the dependency array.",["120"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",{"desc":"121","fix":"122"},"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [props]",{"range":"125","text":"126"},"Update the dependencies array to be: [checkWin, props.tiles]",{"range":"127","text":"128"},[1116,1118],"[props]",[1157,1170],"[checkWin, props.tiles]"]